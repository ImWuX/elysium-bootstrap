[project]
name = "ElysiumOS"


# Source Targets #
[source.support]
type = "local"
url = "support"

[source.patches]
type = "local"
url = "patches"

[source.autoconf]
type = "tar"
url = "https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz"

[source.automake]
type = "tar"
url = "https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz"
modifiers = [
    { type = "patch", source = "patches", file = "automake.diff" }
]

[source.gnulib]
type = "tar"
url = "https://git.savannah.gnu.org/cgit/gnulib.git/snapshot/gnulib-8c4d0fbf4c45df8e86acbb338b154930c5498dc3.tar.gz"

[source.libtool]
dependencies = ["host:autoconf", "host:automake"]
type = "tar"
url = "https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz"
modifiers = [
    { type = "patch", source = "patches", file = "libtool.diff" },
    { type = "exec", source = "gnulib", cmd = "./bootstrap --force --skip-git --skip-po --gnulib-srcdir=$SOURCE:gnulib" }
]

[source.mlibc-sysdeps]
type = "local"
url = "mlibc-sysdeps"

[source.linux-headers]
type = "local"
url = "linux-headers"

[source.mlibc]
type = "tar"
url = "https://github.com/managarm/mlibc/archive/refs/tags/4.0.0-rc1.tar.gz"
modifiers = [
    { type = "patch", source = "patches", file = "mlibc.diff" },
    { type = "merge", source = "mlibc-sysdeps" }
]

[source.binutils]
dependencies = ["host:libtool", "host:automake"] # TODO: Add pkg-config
type = "tar"
url = "https://ftp.gnu.org/gnu/binutils/binutils-2.41.tar.gz"
modifiers = [
    { type = "patch", source = "patches", file = "binutils.diff" },
    { type = "exec", cmd = """
        CFG=$(realpath ./config)
        for f in $(find . -name configure.ac); do \
            ( cd "$(dirname "$f")" && libtoolize -cfvi && autoreconf -fvi -I"$CFG" ); \
        done
    """ }
]

[source.gcc]
dependencies = ["host:libtool", "host:automake"] # TODO: Add pkg-config
type = "tar"
url = "https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.gz"
modifiers = [
    { type = "patch", source = "patches", file = "gcc.diff" },
    { type = "exec", cmd = """
        CFG=$(realpath ./config)
        for f in $(find . -name configure.ac); do \
            ( cd "$(dirname "$f")" && libtoolize -cfvi && autoreconf -fvi -I"$CFG" ); \
        done
    """ }
]

[source.rdsk]
type = "local"
url = "../elysium-rdsk" # TODO: Pull from git repo (Once it actually exists :D)


# Host Targets #
[host.autoconf]
dependencies = ["source:autoconf"]
configure = ["$SOURCE:autoconf/configure --prefix=$PREFIX"]
build = ["make -j$THREADS"]
install = ["DESTDIR=$INSTALL make install"]

[host.automake]
dependencies = ["source:automake", "host:autoconf"]
configure = ["$SOURCE:automake/configure --prefix=$PREFIX"]
build = ["make -j$THREADS"]
install = ["DESTDIR=$INSTALL make install-strip"]

[host.libtool]
runtime-dependencies = ["host:autoconf"]
dependencies = ["source:libtool", "host:autoconf", "host:automake"]
configure = ["$SOURCE:libtool/configure --prefix=$PREFIX"]
build = ["make -j$THREADS"]
install = ["DESTDIR=$INSTALL make install-strip"]

[host.binutils]
dependencies = ["source:binutils"] # TODO: Might need autoconf/automake/pkg-config
configure = ["$SOURCE:binutils/configure --with-sysroot=$ROOT --prefix=$PREFIX --target=x86_64-elysium --enable-targets=x86_64-elf,x86_64-pe --disable-nls --disable-werror --disable-dependency-tracking"]
build = ["make -j$THREADS all"]
install = ["DESTDIR=$INSTALL make install-strip"]

[host.bootstrap-gcc] # TODO: Might need autoconf/automake/pkg-config
runtime-dependencies = ["host:binutils"]
dependencies = ["source:gcc", "mlibc-headers"]
configure = [
    """
    CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" $SOURCE:gcc/configure \
        --prefix=$PREFIX \
        --target=x86_64-elysium \
        --with-sysroot=$ROOT \
        --enable-languages=c,c++ \
        --disable-nls \
        --disable-multilib \
        --disable-shared \
        --enable-initfini-array
    """
]
build = [
    "make -j$THREADS inhibit_libc=true all-gcc",
    "make -j$THREADS inhibit_libc=true all-target-libgcc"
]
install = [
    "DESTDIR=$INSTALL make install-gcc",
    "DESTDIR=$INSTALL make install-target-libgcc"
]

[host.gcc]
runtime-dependencies = ["host:binutils", "mlibc-headers", "mlibc"]
dependencies = ["source:gcc"]
configure = [
    """
    CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" $SOURCE:gcc/configure \
        --prefix=$PREFIX \
        --target=x86_64-elysium \
        --with-sysroot=$ROOT \
        --enable-languages=c,c++ \
        --disable-nls \
        --disable-multilib \
        --enable-initfini-array
    """
]
build = [
    "make -j$THREADS inhibit_libc=true all-gcc",
    "make -j$THREADS inhibit_libc=true all-target-libgcc"
]
install = [
    "DESTDIR=$INSTALL make install-gcc",
    "DESTDIR=$INSTALL make install-target-libgcc"
]


[host.rdsk] # TODO: Possibly implement a configure esq build system for rdsk.. if not autotools lmao
dependencies = ["source:rdsk"]
configure = [
    "cp -r $SOURCE:rdsk/src .",
    "cp $SOURCE:rdsk/Makefile .",
]
build = ["make -j$THREADS all"]
install = ["DESTDIR=$INSTALL PREFIX=$PREFIX make install"]


# Standard Targets #
[target.mlibc-headers]
dependencies = ["source:mlibc", "source:support", "source:linux-headers"] # TODO: Might need pkg-config
configure = [
    """
    meson setup \
        --cross-file $SOURCE:support/elysium.cross-file \
        --prefix=/usr \
        -Dheaders_only=true \
        -Ddisable_iconv_option=true \
        -Ddisable_intl_option=true \
        -Ddisable_crypt_option=true \
        -Ddisable_linux_option=true \
        -Dlinux_kernel_headers=$SOURCE:linux-headers/include/linux \
        --buildtype=release \
        $SOURCE:mlibc
    """
]
build = ["ninja"]
install = ["DESTDIR=$INSTALL ninja install"]

[target.mlibc]
dependencies = ["source:mlibc", "source:support", "source:linux-headers", "mlibc-headers", "host:bootstrap-gcc"] # TODO: Might need pkg-config
configure = [
    """
    meson setup \
        --cross-file $SOURCE:support/elysium.cross-file \
        --prefix=/usr \
        --libdir=lib \
        -Dmlibc_no_headers=true \
        -Ddisable_iconv_option=true \
        -Ddisable_intl_option=true \
        -Ddisable_crypt_option=true \
        -Ddisable_linux_option=true \
        -Dlinux_kernel_headers=$SOURCE:linux-headers/include/include/linux \
        --buildtype=debug \
        $SOURCE:mlibc
    """
]
build = ["ninja"]
install = ["DESTDIR=$INSTALL ninja install"]


# Sysroot #
[source.test]
type = "local"
url = "../elysium-userspace/test"

[target.test]
dependencies = ["source:test", "host:gcc", "mlibc-headers", "mlibc"]
configure = [
    "cp -r $SOURCE:test/src .",
    "cp $SOURCE:test/Makefile ."
]
build = ["make -j$THREADS all"]
install = ["DESTDIR=$INSTALL PREFIX=$PREFIX make install"]

[target.root]
dependencies = ["mlibc", "test", "host:rdsk"]
configure = ["mkdir $ROOT/modules"] # Violates chariot principles...
build = ["rdsk -c $ROOT -o root.rdk"]
install = ["cp root.rdk $INSTALL/root.rdk"]